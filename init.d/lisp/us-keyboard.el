
;;;; us-keyboard.el


(premise init)
(premise bindings)

(let* ((decodings '(([?@] . [?\"])
                    ([?^] . [?&])
                    ([?&] . [?'])
                    ([?*] . [?\(])
                    ([?\(] . [?\)])
                    ([?\)] . [?_])
                    ([?_] . [?=])
                    ([?=] . [?^])
                    ([?+] . [?~])
                    ([?\[] . [?@])
                    ([?{] . [?`])
                    ([?\]] . [?\[])
                    ([?}] . [?{])
                    ([?:] . [?+])
                    ([?'] . [?:])
                    ([?\"] . [?*])
                    ([?\\] . [?\]])
                    ([?|] . [?}])
                    ([?`] . [?\\])
                    ([?~] . [?|])

                    ([?\C-@] . [?\C-\"])
                    ([?\C-^] . [?\C-&])
                    ([?\C-&] . [?\C-'])
                    ([?\C-*] . [?\C-\(])
                    ([?\C-\(] . [?\C-\)])
                    ([?\C-\)] . [?\C-_])
                    ([?\C-_] . [?\C-=])
                    ([?\C-=] . [?\C-^])
                    ([?\C-+] . [?\C-~])
                    ([?\C-\[] . [?\C-@])
                    ([?\C-{] . [?\C-`])
                    ([?\C-\]] . [?\C-\[])
                    ([?\C-}] . [?\C-{])
                    ([?\C-:] . [?\C-+])
                    ([?\C-'] . [?\C-:])
                    ([?\C-\"] . [?\C-*])
                    ([?\C-\\] . [?\C-\]])
                    ([?\C-|] . [?\C-}])
                    ([?\C-`] . [?\C-\\])
                    ([?\C-~] . [?\C-|])

                    ([?\H-@] . [?\H-\"])
                    ([?\H-^] . [?\H-&])
                    ([?\H-&] . [?\H-'])
                    ([?\H-*] . [?\H-\(])
                    ([?\H-\(] . [?\H-\)])
                    ([?\H-\)] . [?\H-_])
                    ([?\H-_] . [?\H-=])
                    ([?\H-=] . [?\H-^])
                    ([?\H-+] . [?\H-~])
                    ([?\H-\[] . [?\H-@])
                    ([?\H-{] . [?\H-`])
                    ([?\H-\]] . [?\H-\[])
                    ([?\H-}] . [?\H-{])
                    ([?\H-:] . [?\H-+])
                    ([?\H-'] . [?\H-:])
                    ([?\H-\"] . [?\H-*])
                    ([?\H-\\] . [?\H-\]])
                    ([?\H-|] . [?\H-}])
                    ([?\H-`] . [?\H-\\])
                    ([?\H-~] . [?\H-|])

                    ([?\s-@] . [?\s-\"])
                    ([?\s-^] . [?\s-&])
                    ([?\s-&] . [?\s-'])
                    ([?\s-*] . [?\s-\(])
                    ([?\s-\(] . [?\s-\)])
                    ([?\s-\)] . [?\s-_])
                    ([?\s-_] . [?\s-=])
                    ([?\s-=] . [?\s-^])
                    ([?\s-+] . [?\s-~])
                    ([?\s-\[] . [?\s-@])
                    ([?\s-{] . [?\s-`])
                    ([?\s-\]] . [?\s-\[])
                    ([?\s-}] . [?\s-{])
                    ([?\s-:] . [?\s-+])
                    ([?\s-'] . [?\s-:])
                    ([?\s-\"] . [?\s-*])
                    ([?\s-\\] . [?\s-\]])
                    ([?\s-|] . [?\s-}])
                    ([?\s-`] . [?\s-\\])
                    ([?\s-~] . [?\s-|])

                    ([?\A-@] . [?\A-\"])
                    ([?\A-^] . [?\A-&])
                    ([?\A-&] . [?\A-'])
                    ([?\A-*] . [?\A-\(])
                    ([?\A-\(] . [?\A-\)])
                    ([?\A-\)] . [?\A-_])
                    ([?\A-_] . [?\A-=])
                    ([?\A-=] . [?\A-^])
                    ([?\A-+] . [?\A-~])
                    ([?\A-\[] . [?\A-@])
                    ([?\A-{] . [?\A-`])
                    ([?\A-\]] . [?\A-\[])
                    ([?\A-}] . [?\A-{])
                    ([?\A-:] . [?\A-+])
                    ([?\A-'] . [?\A-:])
                    ([?\A-\"] . [?\A-*])
                    ([?\A-\\] . [?\A-\]])
                    ([?\A-|] . [?\A-}])
                    ([?\A-`] . [?\A-\\])
                    ([?\A-~] . [?\A-|])))
       (esc-bindings (mapcar (lambda (decoding)
                               (cons (car decoding)
                                     (lookup-key esc-map (cdr decoding))))
                             decodings))
       (overriding-esc-bindings
        (mapcar (lambda (decoding)
                  (cons (car decoding)
                        (let ((key (vconcat (kbd "ESC") (cdr decoding))))
                          (lookup-key (overriding-map-for key) key))))
                decodings)))
  (dolist (decoding decodings)
    (define-key input-decode-map (car decoding) (cdr decoding)))
  (dolist (esc-binding esc-bindings)
    (if (cdr esc-binding)
        (define-key esc-map (car esc-binding) (cdr esc-binding))))
  (dolist (overriding-esc-binding overriding-esc-bindings)
    (if (cdr overriding-esc-binding)
      (overriding-set-key
         (vconcat (kbd "ESC") (car overriding-esc-binding))
         (cdr overriding-esc-binding)))))


(resolve us-keyboard)
